enum ChallengeStatus {
  OpenForSubmissions
  OpenForClaims
  Expired
}

type Challenge @entity(immutable: false) {
  id: String!
  challengeNumber: BigInt! @index # uint256
  status: ChallengeStatus!
  assertionId: BigInt! # uint256
  assertionStateRootOrConfirmData: Bytes! # bytes
  assertionTimestamp: BigInt! @index # uint64
  challengerSignedHash: Bytes! # bytes
  activeChallengerPublicKey: Bytes! # bytes
  rollupUsed: Bytes! # address
  createdTimestamp: BigInt! # uint256
  totalSupplyOfNodesAtChallengeStart: BigInt! # uint256
  rewardAmountForClaimers: BigInt! # uint256
  amountForGasSubsidy: BigInt! # uint256
  numberOfEligibleClaimers: BigInt! # uint256
  amountClaimedByClaimers: BigInt! # uint256
  submissions: [Submission!]! @derivedFrom(field: "challenge")
}

enum SubmittedFrom {
  submitAssertion
  submitMultipleAssertions
  unknown
}

enum ClaimedFrom {
  claimRewards
  claimMultipleRewards
  unclaimed
}

type Submission @entity(immutable: false) {
  id: String!
  challengeNumber: BigInt!
  claimed: Boolean!
  eligibleForPayout: Boolean!
  nodeLicenseId: BigInt! 
  assertionsStateRootOrConfirmData: String!
  claimAmount: BigInt!
  createdTimestamp: BigInt!
  claimTimestamp: BigInt!
  createdTxHash: Bytes!
  claimTxHash: Bytes!
  sentryKey: SentryKey!
  challenge: Challenge!
  submittedFrom: SubmittedFrom!
  claimedFrom: ClaimedFrom!
}

type SentryWallet @entity(immutable: false) {
  id: String!
  isKYCApproved: Boolean!
  address: Bytes! @index
  approvedOperators: [Bytes!]!
  v1EsXaiStakeAmount: BigInt!
  esXaiStakeAmount: BigInt!
  keyCount: BigInt!
  stakedKeyCount: BigInt!
  sentryKeys: [SentryKey!]! @derivedFrom(field: "sentryWallet")
}

type RefereeConfig @entity(immutable: false) {
  id: String!
  version: BigInt!
  maxStakeAmountPerLicense: BigInt!
  maxKeysPerPool: BigInt!
  stakeAmountTierThresholds: [BigInt!]!
  stakeAmountBoostFactors: [BigInt!]!
}

type PoolSubmission @entity(immutable: false) {
  id: String!
  challengeId: BigInt!
  poolAddress: Bytes!
  challenge: Challenge!
  poolInfo: PoolInfo!
  stakedKeyCount: BigInt!
  winningKeyCount: BigInt!
  claimedRewardsAmount: BigInt!
  assertionsStateRootOrConfirmData: String!
  createdTimestamp: BigInt!
  createdTxHash: Bytes!
  claimTimestamp: BigInt!
  claimTxHash: Bytes!
  claimed: Boolean!
}