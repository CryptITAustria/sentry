
################################################################################
# AUTO-GENERATED FILE NOTICE                                                   #
################################################################################
# File: This is an auto-generated file combining GraphQL schema files from the #
# 'schema' directory.                                                          #
#                                                                              #
# Purpose: Attempts to use conventional methods for combining GraphQL schemas, #
# such as commented import statements or tools designed for non-web3 GraphQL   #
# libraries, were unsuccessful due to compatibility issues with The Graph's    #
# specific GraphQL types and lack of clear documentation.                      #
#                                                                              #
# Method: This workaround involves using a JavaScript file to programmatically #
# merge all schema files. Suggestions for more efficient methods to organize   #
# and combine large GraphQL schemas are welcome.                               #
################################################################################



##########################################################################
# Challenge.graphql                                                      #
# src/schema/events/Challenge.graphql                                    #
##########################################################################
# src/schema/events/Challenge.graphql
enum ChallengeStatus {
  OpenForSubmissions
  OpenForClaims
  Expired
}

type Challenge
  @entity(immutable: false)
  @index(fields: ["assertionTimestamp"]) {
  id: String!
  challengeNumber: BigInt! # uint256
  status: ChallengeStatus!
  assertionId: BigInt! # uint256
  assertionStateRootOrConfirmData: Bytes! # bytes
  assertionTimestamp: BigInt! # uint64
  challengerSignedHash: Bytes! # bytes
  activeChallengerPublicKey: Bytes! # bytes
  rollupUsed: Bytes! # address
  createdTimestamp: BigInt! # uint256
  totalSupplyOfNodesAtChallengeStart: BigInt! # uint256
  rewardAmountForClaimers: BigInt! # uint256
  amountForGasSubsidy: BigInt! # uint256
  numberOfEligibleClaimers: BigInt! # uint256
  amountClaimedByClaimers: BigInt! # uint256
  submissions: [Submission!]! @derivedFrom(field: "challenge")
  pool: PoolInfo! @derivedFrom(field: "poolChallenges")
}


##################################################################################################
# ConvertedToEsXaiEvent.graphql                                                                  #
# src/schema/events/ConvertedToEsXaiEvent.graphql                                                #
##################################################################################################
# src/schema/events/ConvertedToEsXaiEvent.graphql
type ConvertedToEsXaiEvent @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  amount: BigInt!
  timestamp: BigInt!
}


##########################################################################################
# PoolFactoryConfig.graphql                                                              #
# src/schema/events/PoolFactoryConfig.graphql                                            #
##########################################################################################
# src/schema/events/PoolFactoryConfig.graphql
type PoolFactoryConfig @entity(immutable: false) {
  id: String!
  version: BigInt!
  unstakeKeysDelayPeriod: BigInt!
  unstakeGenesisKeyDelayPeriod: BigInt!
  unstakeEsXaiDelayPeriod: BigInt!
  updateRewardBreakdownDelayPeriod: BigInt!
}


########################################################################
# PoolInfo.graphql                                                     #
# src/schema/events/PoolInfo.graphql                                   #
########################################################################
# src/schema/events/PoolInfo.graphql
type PoolInfo
  @entity(immutable: false)
  @index(fields: ["totalStakedEsXaiAmount"]) {
  id: String!
  address: Bytes!
  owner: Bytes!
  delegateAddress: Bytes!
  totalStakedEsXaiAmount: BigInt!
  totalStakedKeyAmount: BigInt!
  ownerShare: BigInt!
  keyBucketShare: BigInt!
  stakedBucketShare: BigInt!
  updateSharesTimestamp: BigInt!
  pendingShares: [BigInt!]!
  metadata: [String!]!
  socials: [String!]!
  ownerStakedKeys: BigInt!
  ownerRequestedUnstakeKeyAmount: BigInt!
  ownerLatestUnstakeRequestCompletionTime: BigInt!
  createdTimestamp: BigInt!
  poolChallenges: [Challenge!]! @derivedFrom(field: "pool")
}


##################################################################################
# RefereeConfig.graphql                                                          #
# src/schema/events/RefereeConfig.graphql                                        #
##################################################################################
# src/schema/events/RefereeConfig.graphql
type RefereeConfig @entity(immutable: false) {
  id: String!
  version: BigInt!
  maxStakeAmountPerLicense: BigInt!
  maxKeysPerPool: BigInt!
  stakeAmountTierThresholds: [BigInt!]!
  stakeAmountBoostFactors: [BigInt!]!
}


##########################################################################
# SentryKey.graphql                                                      #
# src/schema/events/SentryKey.graphql                                    #
##########################################################################
# src/schema/events/SentryKey.graphql
type SentryKey @entity(immutable: false) {
  id: String!
  owner: Bytes! # address
  sentryWallet: SentryWallet!
  keyId: BigInt!
  mintTimeStamp: BigInt!
  assignedPool: Bytes! # address
  submissions: [Submission!]! @derivedFrom(field: "sentryKey")
}


################################################################################
# SentryWallet.graphql                                                         #
# src/schema/events/SentryWallet.graphql                                       #
################################################################################
# src/schema/events/SentryWallet.graphql
type SentryWallet @entity(immutable: false) {
  id: String!
  isKYCApproved: Boolean!
  address: Bytes!
  approvedOperators: [Bytes!]!
  v1EsXaiStakeAmount: BigInt!
  esXaiStakeAmount: BigInt!
  keyCount: BigInt!
  stakedKeyCount: BigInt!
  sentryKeys: [SentryKey!]! @derivedFrom(field: "sentryWallet")
}


############################################################################
# Submission.graphql                                                       #
# src/schema/events/Submission.graphql                                     #
############################################################################
# src/schema/events/Submission.graphql
enum SubmittedFrom {
  submitAssertion
  submitMultipleAssertions
  unknown
}

enum ClaimedFrom {
  claimRewards
  claimMultipleRewards
  unclaimed
}

type Submission @entity(immutable: false) {
  id: String!
  challengeNumber: BigInt!
  claimed: Boolean!
  eligibleForPayout: Boolean!
  nodeLicenseId: BigInt! #TODO see if this can be removed sicne it can be found under sentryKey
  assertionsStateRootOrConfirmData: String!
  claimAmount: BigInt!
  createdTimestamp: BigInt!
  claimTimestamp: BigInt!
  createdTxHash: Bytes!
  claimTxHash: Bytes!
  sentryKey: SentryKey!
  challenge: Challenge!
  submittedFrom: SubmittedFrom!
  claimedFrom: ClaimedFrom!
}


####################################################################################
# UnstakeRequest.graphql                                                           #
# src/schema/events/UnstakeRequest.graphql                                         #
####################################################################################
# src/schema/events/UnstakeRequest.graphql
type UnstakeRequest @entity(immutable: false) {
  id: String!
  user: Bytes!
  pool: Bytes!
  index: BigInt!
  amount: BigInt!
  isKey: Boolean!
  open: Boolean!
  lockTime: BigInt!
  completeTime: BigInt!
}


